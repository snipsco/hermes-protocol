buildscript {
    ext.kotlin_version = '1.1.51'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

version = "0.22.0-SNAPSHOT"
group = "ai.snips"


// Apply the java-library plugin to add support for Java Library
apply plugin: 'kotlin'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "https://nexus-repository.snips.ai/repository/snips-maven-releases/"
    }
    maven {
        url "https://nexus-repository.snips.ai/repository/snips-maven-snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'ai.snips:snips-queries-ontology:0.6.0-20171115.134549-3' // make sure we use the same version in rust...
    compile 'net.java.dev.jna:jna:4.5.0'
    compile 'org.parceler:parceler-api:1.1.9'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

apply plugin: 'maven'

def _nexusUsername = project.hasProperty("nexusUsername") ? nexusUsername : ""
def _nexusPassword = project.hasProperty("nexusPassword") ? nexusPassword : ""

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://nexus-repository.snips.ai/repository/snips-maven-releases/") {
                authentication(userName: _nexusUsername, password: _nexusPassword)
            }
            snapshotRepository(url: "https://nexus-repository.snips.ai/repository/snips-maven-snapshots/") {
                authentication(userName: _nexusUsername, password: _nexusPassword)
            }
            pom.whenConfigured { pom ->
                pom.dependencies.find { dep -> dep.groupId == 'net.java.dev.jna' && dep.artifactId == 'jna' }.scope = "provided"
            }
        }
    }
}
